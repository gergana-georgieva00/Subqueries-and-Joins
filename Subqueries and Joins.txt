use SoftUni
select top 5 
e.EmployeeId, e.JobTitle, a.AddressID, a.AddressText
from Employees  e
inner join Addresses a
on e.AddressID = a.AddressID
order by e.AddressID asc

select top 50
e.FirstName, e.LastName, t.[Name] as [Town], a.AddressText
from Employees e
join Addresses a on a.AddressID = e.AddressID
join Towns t on t.TownID = a.TownID
order by FirstName,
		 LastName
		 
select e.EmployeeID, e.FirstName, e.LastName, d.[Name] as DepartmentName
from Employees e
join Departments d on d.DepartmentID = e.DepartmentID
where d.[Name] = 'Sales'
order by EmployeeID

select top 5 
e.EmployeeID, e.FirstName, e.Salary, d.[Name] as DepartmentName
from Employees e
join Departments d on d.DepartmentID = e.DepartmentID
where e.Salary > 15000
order by e.DepartmentID

select top 3
e.EmployeeID, e.FirstName
from Employees e
left join EmployeesProjects ep on ep.EmployeeID = e.EmployeeID
--join Projects p on p.ProjectID = ep.ProjectID
where ep.ProjectID is null
order by EmployeeID

select e.FirstName, e.LastName, e.HireDate, d.[Name] as DeptName
from Employees e
join Departments d
on d.DepartmentID = e.DepartmentID
where e.HireDate > '1-11-1999'
	  and d.[Name] in ('Sales', 'Finance')
order by e.HireDate

select top 5
e.EmployeeID, e.FirstName, p.[Name]
from Employees e
join EmployeesProjects ep on ep.EmployeeID = e.EmployeeID
join Projects p on p.ProjectID = ep.ProjectID
where p.StartDate > '08-13-2002'
	  and p.EndDate is null
order by EmployeeID

select e.EmployeeID, e.FirstName,-- p.[Name] as [ProjectName],
case 
	when year(p.StartDate) >= 2005 then null
	else p.[Name]
end as [ProjectName]
from Employees e
join EmployeesProjects ep on ep.EmployeeID = e.EmployeeID
join Projects p on p.ProjectID = ep.ProjectID
where e.EmployeeID = 24

select e.EmployeeID, e.FirstName, e.ManagerID, m.FirstName as [ManagerName]
from Employees e
join Employees as m on m.EmployeeID = e.ManagerID
where e.ManagerID in (3, 7)
order by e.EmployeeID

select top 50 
e.EmployeeID, e.FirstName + ' ' + e.LastName as EmployeeName, 
m.FirstName + ' ' + m.LastName as ManagerName, 
d.[Name] as DepartmentName
from Employees e
join Employees m on m.EmployeeID = e.ManagerID
join Departments d on d.DepartmentID = e.DepartmentID
order by e.EmployeeID

select min(a.AverageSalary) as MinAverageSalary
from
	(select e.DepartmentID, avg(e.Salary) as AverageSalary
	from Employees e
	group by e.DepartmentID)
as a

select 
c.CountryCode, 
m.MountainRange, 
p.PeakName, p.Elevation
from Countries c
join MountainsCountries mc on c.CountryCode = mc.CountryCode
join Mountains m on m.Id = mc.MountainId
join Peaks p on p.MountainId = m.Id
where p.Elevation > 2835
	  and c.CountryCode = 'BG'
order by Elevation desc

select CountryCode, 
	   count(MountainId)
as MountainRanges
from MountainsCountries
where CountryCode in (
						select CountryCode 
						from Countries
						where CountryName in ('United States', 'Russia', 'Bulgaria')
					 )
group by CountryCode

